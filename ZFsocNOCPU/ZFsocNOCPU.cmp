	component ZFsocNOCPU is
		port (
			avalon_bridge_address     : in    std_logic_vector(25 downto 0) := (others => 'X'); -- address
			avalon_bridge_byte_enable : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- byte_enable
			avalon_bridge_read        : in    std_logic                     := 'X';             -- read
			avalon_bridge_write       : in    std_logic                     := 'X';             -- write
			avalon_bridge_write_data  : in    std_logic_vector(15 downto 0) := (others => 'X'); -- write_data
			avalon_bridge_acknowledge : out   std_logic;                                        -- acknowledge
			avalon_bridge_read_data   : out   std_logic_vector(15 downto 0);                    -- read_data
			clk_clk                   : in    std_logic                     := 'X';             -- clk
			reset_reset_n             : in    std_logic                     := 'X';             -- reset_n
			sdram_clk_clk             : out   std_logic;                                        -- clk
			sdram_clk_100_clk         : out   std_logic;                                        -- clk
			sdram_wire_addr           : out   std_logic_vector(12 downto 0);                    -- addr
			sdram_wire_ba             : out   std_logic_vector(1 downto 0);                     -- ba
			sdram_wire_cas_n          : out   std_logic;                                        -- cas_n
			sdram_wire_cke            : out   std_logic;                                        -- cke
			sdram_wire_cs_n           : out   std_logic;                                        -- cs_n
			sdram_wire_dq             : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			sdram_wire_dqm            : out   std_logic_vector(1 downto 0);                     -- dqm
			sdram_wire_ras_n          : out   std_logic;                                        -- ras_n
			sdram_wire_we_n           : out   std_logic                                         -- we_n
		);
	end component ZFsocNOCPU;

